{"version":3,"sources":["singleProject.js","singleBox.js","BoxBox.js","components/TimeLineItem.js","components/TimeLine.js","Bio.js","App.js","serviceWorker.js","index.js"],"names":["SingleProject","id","content","projectdata","className","ProjectName","Descibtion","DataSetLink","href","target","rel","Images","map","item","index","key","src","GithubLink","OtherLink","SingleBox","skill","onClose","data","cskill","skillDes","skill_describtion","projectdisplay","projects","filter","Skill","includes","useState","showSingleProject","setShowSingleProject","currentProjectId","setcurrentProjectId","console","log","findIndex","items","type","desc","title","style","paddingLeft","textAlign","paddingTop","picture","onClick","event","Number","isInteger","switchcurrentProjectId","ProjectId","BoxBox","props","image","name","TimeLineItem","visible","setVisibel","category","background","color","tag","date","head","text","text_list","margin","link","url","TimeLine","timelineData","idx","Bio","App","currentId","setCurrentId","currentSkill","setCurrentSkill","showSingleBox","setShowSingleBox","showSkill","setShowBox","toggleSkillBoxHandler","showBio","setshowBio","toggleBioHandler","window","scrollTo","filteredBoxes","setdisplayBoxes","filterBoxHandler","box","group","showImpress","setshowImpress","height","autoFocus","currentskill","ev","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.67c23240.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport projectdata from './projects.json';\r\n\r\nconst SingleProject = ({id}) => {\r\n\r\n  const content = projectdata[id];\r\n\r\n  return (\r\n    <div className=\"SingleProject\">\r\n      <div  className=\"displayBlock\">\r\n        <h2>{content.ProjectName}</h2> \r\n      </div>\r\n      <hr></hr>\r\n      <p>{content.Descibtion}</p>\r\n\r\n      {content.DataSetLink ? \r\n      <a href={content.DataSetLink}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\">\r\n      Link to Dataset</a>\r\n      : null }\r\n\r\n      <div className=\"ProjectImages\">\r\n        {content.Images.map((item,index) => \r\n          <img key={index} className=\"ExampleImages\" src={`${item}`}></img>\r\n        )}\r\n      </div>\r\n      \r\n      {content.GithubLink ? \r\n      <a href={content.GithubLink} target=\"_blank\" rel=\"noopener noreferrer\">Link to Github</a>\r\n      :null}\r\n      \r\n\r\n      {content.OtherLink ? \r\n      <a href={content.OtherLink}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\">\r\n      Link to PDF</a>\r\n      : null }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SingleProject","import React, {useState} from 'react';\r\nimport onClickOutside from \"react-onclickoutside\";\r\n\r\n\r\nimport data from './data.json';\r\nimport projects from './projects.json';\r\nimport SingleProject from './singleProject';\r\nimport skill_describtion from \"./skill_describtion.json\";\r\n\r\n\r\nconst SingleBox = ({id,skill,onClose}) => {\r\n\r\n  const content = data[id];\r\n\r\n  const cskill = skill;\r\n  const skillDes = skill_describtion;\r\n\r\n  const currentskill = skillDes.cskill;\r\n\r\n\r\n\r\n  const projectdisplay = projects.filter((item) => item.Skill.includes(`${skill}`));\r\n\r\n  const [showSingleProject, setShowSingleProject] = useState(false);\r\n\r\n  const [currentProjectId, setcurrentProjectId] = useState(false);\r\n  const switchcurrentProjectId = (id) =>{\r\n    setcurrentProjectId(id)\r\n  }\r\n\r\n  const toggleShowSingleProject = () => {\r\n    \r\n    if (Number.isInteger(currentProjectId)){\r\n      setShowSingleProject(showSingleProject)\r\n    } else {\r\n    setShowSingleProject(!showSingleProject);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n return (\r\n  <div className='SingleBoxContainer'>\r\n    <div className=\"SingleBox\">        \r\n      \r\n      <div className=\"SingleBoxProjects\">\r\n        \r\n\r\n      {console.log(cskill)}\r\n      {console.log(skillDes[skillDes.findIndex(items => items.type === cskill)].desc)}\r\n      {console.log([skillDes.findIndex(items => items.type === cskill)])}  \r\n     \r\n\r\n\r\n        {showSingleProject == true ? <SingleProject \r\n            id={currentProjectId}/> : \r\n            <div>\r\n              <h2>{skillDes[skillDes.findIndex(items => items.type === cskill)].title}</h2>\r\n\r\n              <ul style={{ paddingLeft:\"30%\"}}>{skillDes[skillDes.findIndex(items => items.type === cskill)].desc.map((items, index) => \r\n                <li key={index} style={{textAlign:\"left\"}}>{items}</li>)}</ul>\r\n\r\n                <p style={{paddingTop:\"30px\"}}>select project --{\">\"}</p>\r\n            </div>}\r\n        \r\n\r\n      </div>\r\n      <div className=\"Button_Project\">\r\n      <span style={{textAlign:\"center\"}}><h2>{content.skill}</h2></span>\r\n      <img className=\"SkillLogo1\" src={`${content.picture}`}></img>\r\n      {projectdisplay.map((items, index) => \r\n        <div key={index}>\r\n          <button className=\"Button_Timeline_Info\" \r\n                  onClick={function(event)\r\n                    {toggleShowSingleProject();\r\n                      switchcurrentProjectId(items.ProjectId)}}>\r\n                  {items.ProjectName}\r\n          </button>\r\n        </div>\r\n        )}\r\n        <button onClick={onClose} className=\"Button_Timeline_Info\">Close</button>\r\n        </div>\r\n      \r\n    </div>\r\n\r\n  \r\n  \r\n  \r\n    {/*console.log(data[props].skill)*/}\r\n    \r\n  </div>\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default SingleBox","import React from 'react';\r\nimport SingleBox from './singleBox';\r\n\r\nconst BoxBox = (props) => {\r\n  return (\r\n      <div className=\"BoxBoxBox\" \r\n           onClick={props.onClick}>\r\n          <img className=\"SkillLogo1\" src={`${props.image}`}/>  \r\n          <h3>{props.name}</h3>    \r\n      </div>\r\n    )\r\n};\r\n\r\nexport default BoxBox\r\n\r\n","import React, {useState} from \"react\";\r\n//import P_show from \"./P_show\"\r\n\r\n//let show = false;\r\n\r\n\r\n\r\n\r\n\r\nconst TimeLineItem = ({data}) => {\r\n\r\n\r\n  const [visible, setVisibel] = useState(false);\r\n  const visibileHandler = () => {\r\n    setVisibel(!visible)\r\n  }\r\n\r\n  return(\r\n\r\n  \r\n\r\n  <div className=\"timeline-item\">\r\n    <div className=\"timeline-item-content\">\r\n\r\n      {data.category ? <span className=\"tag\" \r\n            style={{background: data.category.color}}>\r\n            {data.category.tag}\r\n      </span> :null}\r\n      \r\n      <time>{data.date}</time>\r\n      <hr className=\"hr_long\"></hr>\r\n\r\n      <h2>{data.head}</h2>\r\n     \r\n\r\n      \r\n      {visible === true && data.text ?\r\n      \r\n      <div className=\"LastItem\">\r\n      \r\n      <p>{data.text}</p>\r\n\r\n        {data.text_list ? \r\n\r\n        <div style={{margin: \"20px\"}}>\r\n        \r\n        {data.text_list.map((items, index) => \r\n          <li key={index}>{items}</li>)}\r\n\r\n        </div>\r\n\r\n        :null}\r\n      \r\n\r\n\r\n      {data.link && <a href={data.link.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\">\r\n                          {data.link.text}\r\n                        </a>}\r\n      </div>\r\n      : null}\r\n      {data.text ? \r\n      <button className=\"Button_Timeline_Info\" onClick={visibileHandler}>\r\n        {visible == false ? \"more info\" : \"less info\"}\r\n        </button>\r\n        : null}\r\n\r\n      <span className=\"circle\"></span>\r\n    </div>\r\n  </div>\r\n)\r\n  }\r\n\r\nexport default TimeLineItem","import React from \"react\";\r\n\r\nimport timelineData from \"../bio.json\";\r\nimport TimeLineItem from \"./TimeLineItem\";\r\n\r\nconst TimeLine = () => { return (\r\n  <div className=\"timeline-container\">\r\n    {timelineData.map((data,idx) => (\r\n      <TimeLineItem data={data} key={idx} />\r\n    ))}\r\n  </div>\r\n)};\r\n\r\nexport default TimeLine","import React from 'react';\r\n//import selfi from \"./images/DSC09792.JPG\";\r\n\r\nimport TimeLine from \"./components/TimeLine\";\r\n\r\n\r\n\r\nconst Bio = () => {\r\n  return (\r\n    <div className='Bio'>\r\n      <div className=\"Born\">\r\n        <h3 >born n stuff</h3>\r\n      </div>\r\n      <TimeLine />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Bio\r\n\r\n\r\n","import React, {useState, useRef} from 'react';\n//import Collapse from 'reactstrap';\nimport './App.css';\n\nimport BoxBox from './BoxBox';\nimport SingleBox from './singleBox';\nimport Bio from './Bio';\n\nimport data from './data.json';\n\n\n\nfunction App() {\n\n  const [currentId, setCurrentId] = useState(false);\n  const [currentSkill, setCurrentSkill] = useState(0);\n\n  // State and Function for showing Single Boxes\n  const [showSingleBox, setShowSingleBox] = useState(false);\n  const toggleSingleBoxHandler = (id,skill) => {\n    if (currentId === false){\n      setShowSingleBox(!showSingleBox)\n      setCurrentId(id);\n      setCurrentSkill(skill)\n    }else {\n      setCurrentId(id);\n      setCurrentSkill(skill);     \n    };\n  }\n  const toggleSingleBoxHandlerCloser = () => {\n    setShowSingleBox(!showSingleBox);\n    setCurrentId(false);\n    window.scrollTo(0, 0)\n  }\n\n  // State and Function for Skill Boxes\n  const [showSkill, setShowBox] = useState(false);\n  const toggleSkillBoxHandler = () => {\n    setShowBox(!showSkill);\n\n    if (showSingleBox){\n      setShowSingleBox(false)\n      setCurrentId(false)\n    } ;\n  }\n\n  // State and Function for Bio\n  const [showBio, setshowBio] = useState(false);\n  const toggleBioHandler = () => {\n      setshowBio(!showBio);     \n      window.scrollTo(0, 0)     \n    }\n\n  // State and Function for Filtering \n  const [filteredBoxes, setdisplayBoxes] = useState([data]);\n  const filterBoxHandler = (props) => {\n    const filteredBoxes = data.filter((box) => box.group.includes(props));\n    setdisplayBoxes(filteredBoxes);\n  }\n\n  const [showImpress, setshowImpress] = useState(false);\n  const toggleImpressum = () => {\n    setshowImpress(!showImpress);\n  }\n\nreturn (\n\n<div className=\"App_Background\">\n  <div className=\"App_Top\">  \n\n    {showBio === true ? \n      <Bio/> \n      : \n      null}\n    {showSkill === true && showBio === false ? \n      <div style={{height:\"200px\"}}></div> \n      : \n      null}\n\n    {(showBio === false && showSkill === false && showSingleBox === false) ? \n    <div className=\"App_Button_Alone\" >\n      <div className=\"Nav_Alone\">\n        <button className='Button_One'\n                onClick={function(event)\n                  {toggleSkillBoxHandler(); \n                  filterBoxHandler('r')}}>\n                                            {showSkill === true ? 'Hide Skills' : \n                                            'Show Skills'}\n                                            </button>\n        <button className='Button_One' \n                onClick={function(event)\n                {toggleBioHandler()}}>\n                                            {showBio === true ? 'Hide Bio' : \n                                            'Show Bio'}\n                                            </button>\n      </div>                                              \n    </div> : \n    \n    <div className=\"App_Button\">\n      <div className=\"Nav\">\n        <button className='Button_One' \n                onClick={function(event)\n                  {toggleSkillBoxHandler(); \n                  filterBoxHandler('r')}}>\n                                            {showSkill === true ? 'Hide Skills' : \n                                            'Show Skills'}\n                                            </button>\n        <button className='Button_One' autoFocus='True'\n                onClick={function(event)\n                {toggleBioHandler()}}>\n                                            {showBio === true ? 'Hide Bio' : \n                                            'Show Bio'}\n                                            </button>\n      </div>                                              \n    </div>}\n\n    <div className=\"App_Lower\">\n\n      {showSingleBox === true ?  \n      <div className='App_Box'>\n        <SingleBox \n          id={currentId}\n          skill={currentSkill}\n          onClose={toggleSingleBoxHandlerCloser}/>\n      </div>: null}\n      \n      {showSkill === true && showSingleBox === false ?       \n        <div>         \n          <div className=\"App_Boxes\">             \n            {filteredBoxes.map((items, index) => \n              <div key={index}>\n                <BoxBox\n                  onClick={function(event){;\n                                          toggleSingleBoxHandler(items.id, items.skill)}}\n                  name={items.skill} \n                  currentskill={currentSkill}\n                  image={items.picture}\n                  key={index}\n                  id={items.id}\n                />\n              </div>)}         \n          </div>\n                  \n          <div className=\"Nav3\">\n            <div>\n              <p>Click on Box to see Details/Projects</p>   \n            </div>\n          \n            <button className='Button_Two' \n                    onClick={(ev) => filterBoxHandler('r')}>All Skills</button>\n            <button className='Button_Two' \n                    onClick={(ev) => filterBoxHandler('computersience')}>IT stuff</button>\n            <button className='Button_Two' \n                    onClick={(ev) => filterBoxHandler('artsandcraft')}>Other stuff</button>\n          </div>            \n        </div> : null}\n\n        <div className=\"footer\">\n            <button className=\"Button_Two\"\n                    onClick={(ev) => toggleImpressum()}>Impressum</button>\n\n          {showImpress === true ? \n          <div className=\"Impressum\">\n            <p>Sebastian Rieger//rieger.geo@gmail.com//24118 Kiel</p>\n          </div>:null}\n        </div>          \n    </div>  \n  </div>\n</div>\n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}